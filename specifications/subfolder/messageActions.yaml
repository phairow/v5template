openapi: 3.0.1
info:
  title: PubNub Message Actions APIs
  description: PubNub Message actions APIs enables you to manage message-actions
  contact:
    name: PubNub Support
    url: https://www.pubnub.com/support
    email: support@pubnub.com
  termsOfService: https://www.pubnub.com/terms-and-conditions/
  version: 1.0.0
servers:
  - url: https://ps.pndsn.com
tags:
- name: Message Actions
  description: APIs for sending and receiving actions on messages sent via PubNub. These actions can represent receipts, reactions or custom actions for messages.
paths:
  /v1/message-actions/{sub_key}/channel/{channel}:
    get:
      tags:
      - Message Actions
      summary: Fetch a list of actions, ordered by action timetoken.
      operationId: fetchMessageActions
      description: Fetch a list of actions, ordered by action timetoken.
      parameters:
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/StartQueryParam'
      - $ref: '#/components/parameters/EndQueryParam'
      - $ref: '#/components/parameters/LimitQueryParam'
      - $ref: '#/components/parameters/AuthQueryParam'
      - $ref: '#/components/parameters/SignatureQueryParam'
      - $ref: '#/components/parameters/TimestampQueryParam' 
      responses:
        '200':
          description: The actions were fetched.
          content:
            application/json:
             schema:
               $ref: '../responses.yaml#/FetchActionsSuccessResponse'
        '400':
          description: The subscribe key is invalid.
          content:
            application/json:
             schema:
               $ref: '../responses.yaml#/MessageActionsErrorInvalidSubscribeKey'

        '403':
          description: The client isn't authorized to perform this operation.
          content:
            application/json:
             schema:
               $ref: '../responses.yaml#/MessageActionsErrorUnauthorizedClient'


  /v1/message-actions/{sub_key}/channel/{channel}/message/{message_timetoken}:
    post:
      tags:
      - Message Actions
      summary: Add a Message Action
      operationId: addMessageAction
      description: Allows users to post actions on a "parent message" by specifying the subkey, channel, and timetoken of the parent message.
      requestBody:
        description: JSON object with user properties.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMessageActionsRequestBody'
      parameters:
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/MessageTimeTokenPathParam'
      - $ref: '#/components/parameters/AuthQueryParam'   
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/SignatureQueryParam'
      - $ref: '#/components/parameters/TimestampQueryParam'
      responses:
        '200':
          description: The message action was successfully added.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/AddMessageActionSuccessResponse'   
        '207':
          description: The message action was stored but failed to publish.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/AddMessageActionPublishFailedError'
        '400':
          description: The post request contained invalid parameters.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/MessageActionsInvalidInputError'
        '403':
          description: "The client isn't authorized to perform this operation. The authorization key you provided doesn't have the required permissions for this operation."
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/MessageActionsErrorUnauthorizedClient'
        '409':
          description: The action was already added
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/MessageActionsCommonErrorObject'
             example: {
                        "status": 409,
                        "error": {
                          "source": "actions",
                          "message": "Action Already Added"
                        }
                      }

  /v1/message-actions/{sub_key}/channel/{channel}/message/{message_timetoken}/action/{action_timetoken}:
    delete:
      tags:
      - Message Actions
      summary: Remove actions from a given message.
      operationId: deleteMessageActions
      description: Allows users to remove their previously-posted message actions, by specifying the parent message, and the single timetoken of the action(s) they wish to delete.
      parameters:
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/MessageTimeTokenPathParam'
      - $ref: '#/components/parameters/ActionTimeTokenPathParam'
      - $ref: '#/components/parameters/AuthQueryParam'  
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/SignatureQueryParam'
      - $ref: '#/components/parameters/TimestampQueryParam'
      responses:
        '200':
          description: The action was removed.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/RemoveActionSuccessResponse'
        '207':
          description: The action was deleted but the action-deletion message was not published.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/MessageActionsCommonErrorObject'
             example: {
                        "status": 207,
                        "error": {
                          "source": "actions",
                          "message": "Deleted but failed to publish removed events."
                        }
                      }
        '400':
          description: Wrong uuid specified for the given message action.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/MessageActionsCommonErrorObject'
             example: {
                        "status": 400,
                        "error": {
                          "source": "actions",
                          "message": "Not deleting message action: wrong uuid specified"
                        }
                      }
        '403':
          description: The client isn't authorized to perform this operation.
          content:
            application/json:
             schema:
              $ref: '../responses.yaml#/MessageActionsErrorUnauthorizedClient'
components:
  parameters:
    SubKeyPathParam:
      name: sub_key
      in: path
      description: the subscriber key
      required: true
      schema:
        type: string
      example: mySubKey
    ChannelPathParam:
      name: channel
      in: path
      description: The channel name.
      required: true
      schema:
        type: string
      example: demo-animal-forest
    StartQueryParam:
      name: start
      in: query
      description: Action timetoken denoting the start of the range requested (return values will be less than start)
      required: false
      schema:
        type: string
      example: '15610547826970040'
    EndQueryParam:
      name: end
      in: query
      description: Action timetoken denoting the end of the range requested (return values will be greater than or equal to end)
      required: false
      schema:
        type: string
      example: '15610547826970040'
    LimitQueryParam:
      name: limit
      in: query
      description: Number of actions to return in response.
      required: false
      schema:
        type: integer
      example: 500 
    AuthQueryParam:
      name: auth
      in: query
      description: Authorization key with permissions to perform the request (if configured)
      required: false
      schema:
        type: string
      example: myAuth 
    MessageTimeTokenPathParam:
      name: message_timetoken
      in: path
      description: The publish timetoken of a parent message.
      required: true
      schema:
        type: string
      example: '15610547826970040'
    UuidQueryParam:
      name: uuid
      in: query
      description: A unique alphanumeric ID for identifying the client to the PubNub Presence System, as well as for PubNub Analytics.
      required: true
      schema:
        type: string
      example: db9c5e39-7c95-40f5-8d71-125765b6f561
    ActionTimeTokenPathParam:
      name: action_timetoken
      in: path
      description: The publish timetoken of the action.
      required: true
      schema:
        type: string
      example: '15610547826970040'
    SignatureQueryParam:
      name: signature
      in: query
      description: |
        Signature used to verify that the request was signed with the secret key associated with the subscriber key.

        If Access Manager is enabled, either a valid authorization token or a signature are required.

        See Access Manager documentation for details on how to compute the signature.
      schema:
        type: string
        example: v2.YmvbpzHJlUDIMJOfD_CnsA8Uw2BJhwPeFZO1Qu5tfC4
    TimestampQueryParam:
      name: timestamp
      in: query
      description: |
        Unix epoch timestamp used as a nonce for signature computation. Must have no more than Â± 60 second offset from NTP.

        Required if `signature` parameter is supplied.
      schema:
        type: integer
        example: 1563226304

  schemas:
    AddMessageActionsRequestBody:
      type: object
      properties:
        type:
          type: string
          example: reaction
        value:
          type: string
          example: smiley_face