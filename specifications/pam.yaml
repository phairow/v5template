openapi: 3.0.1
info:
  title: PubNub PAM APIs
  description: This is the place where you can find all PubNub PAM Endpoint APIs
  termsOfService: http://pubnub.com/terms/
  contact:
    email: support@pubnub.com
  version: 0.0.1
servers:
- url: https://ps.pndsn.com
tags:
- name: PAM v2
  description: PubNub Access Manager (PAM v2) provides fine-grained access controls to PubNub Data Streams.
- name: PAM v3
  description: PubNub Access Manager (PAM v3) provides fine-grained access controls to PubNub Data Streams.
paths:
  /v2/auth/grant/sub-key/{sub_key}:
    get:
      tags:
      - PAM v2
      summary: Applying PMA v2
      description: Endpoint to apply PAM v2
      parameters:      
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/SignatureQueryParam'
      - $ref: '#/components/parameters/AuthQueryParam'
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/TimestampQueryParam'
      - $ref: '#/components/parameters/TimeToLiveQueryParam'
      - $ref: '#/components/parameters/ChannelQueryParam'
      - $ref: '#/components/parameters/ChannelGroupQueryParam'
      - $ref: '#/components/parameters/WritePermissionQueryParam'
      - $ref: '#/components/parameters/ReadPermissionQueryParam'
      - $ref: '#/components/parameters/ManagePermissionQueryParam'
      - $ref: '#/components/parameters/DeletePermissionQueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
             schema:
               $ref: '#/components/schemas/PAMv2Response'

  /v3/pam/{sub_key}/grant:
    post:
      tags:
      - PAM v3
      summary: Applying PAM v3
      description: Returns a signed token that can be used to access the requested resources for a specific duration.
      requestBody:
        description: A JSON blob of resource types to permission rules.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PAMv3RequestBody'
        required: true
      parameters:
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/TimeStampQueryParam'
      - $ref: '#/components/parameters/SignatureQueryParam'
      responses:
        '200':
          description: Grant request was successful.
          content:
            text/javascript:
             schema:
               $ref: '#/components/schemas/PAMv3Response'
        '400':
          description: Error validating inputs. (E.g. missing required params or invalid input types.)
          content:
            text/javascript:
             schema:
               $ref: '#/components/schemas/Error400PAMv3Response'
        '403':
          description: Invalid signature. (E.g. wrong secret key or character set encoding for signature computation.)
          content:
            text/javascript:
             schema:
               $ref: '#/components/schemas/Error403PAMv3Response'

components:
  parameters:
    SubKeyPathParam:
      name: sub_key
      in: path
      description: Your PubNub Subscribe API Key.
      required: true
      schema:
        type: string
      example: mySubKey
    SignatureQueryParam:
      name: signature
      in: query
      description: A signed request as described in the section above.
      required: true
      schema:
        type: string
      example: v2rgQQ1eFzk8omugFV9V1_eKRUvvMv9jyC9ZL1ogdw%3D 
    AuthQueryParam:
      name: auth
      in: query
      description: The Auth key that is being granted permissions.
      required: true
      schema:
        type: string
      example: myAuthKey
    UuidQueryParam:
      name: uuid
      in: query
      description: A unique alphanumeric ID for identifying the client to the PubNub Presence System, as well as for PubNub Analytics.
      required: false
      schema:
        type: string
      example: db9c5e39-7c95-40f5-8d71-125765b6f561
    TimestampQueryParam:
      name: timestamp
      in: query
      description: The timetoken represents a 17-digit precision unix time (UTC). To convert PubNub's timetoken to Unix timestamp (seconds), divide the timetoken number by 10,000,000 (10^7).
      required: true
      schema:
        type: integer
      example: 123456789      
    TimeToLiveQueryParam:
      name: ttl
      in: query
      description: Time to live for permission to be valid
      required: false
      schema:
        type: integer
      example: 123456789
    ChannelQueryParam:
      name: channel
      in: query
      description: Specifies the channels on which to grant permissions. Comma separated values are accepted.
      required: false
      schema:
        type: string
      example: 'ch1,ch2'
    ChannelGroupQueryParam:
      name: channel-group
      in: query
      description: Specifies the channel groups on which to grant permissions. Comma separated values are accepted.
      required: false
      schema:
        type: string
      example: 'group1,group2'     
    WritePermissionQueryParam:
      name: w
      in: query
      description: Write permission
      required: false
      schema:
        type: integer
        enum:
          - 0
          - 1
      example: 1
    ReadPermissionQueryParam:
      name: r
      in: query
      description: Read permission
      required: false
      schema:
        type: integer
        enum:
         - 0
         - 1
      example: 0
    ManagePermissionQueryParam:
      name: m
      in: query
      description: Manage permission
      required: false
      schema:
        type: boolean
      example: 0      
    DeletePermissionQueryParam:
      name: d
      in: query
      description: Delete permission
      required: false
      schema:
        type: integer
        enum:
         - 0
         - 1
      example: 0 
    TimeStampQueryParam:
      name: timestamp
      in: query
      description: Unix epoch timestamp used as a nonce for signature computation. Must have no more than Â± 60 second offset from NTP.
        This is not associated with the TTL at all.
      schema:
        type: integer
      required: true
      example: 123456789

  schemas:
    PAMv2Response:
      type: object
      properties:
        status:
          type: number
          example: 200
        message:
          type: string
          example: Success
        payload:
          $ref: '#/components/schemas/PAMv2ResponsePayload'
        service:
          type: string
          example: Access Manager
    PAMv2ResponsePayload:
      type: object
      properties:
        ttl:
          type: number
          example: 1440
        auths:
          type: object
          properties:
            password:
              $ref: '#/components/schemas/PAMv2ResponsePassword'
        subscribe_key:
          type: string
          example: '{subscribe-key}'
        level:
          type: string
          example: user
        channel:
          type: string
          example: my_channel
    PAMv2ResponsePassword:
      type: object
      properties:
        r:
         type: integer
         enum:
          - 0
          - 1
         example: 1
        w:
         type: integer
         enum:
          - 0
          - 1
         example: 1
        m:
         type: integer
         enum:
          - 0
          - 1
         example: 1
        d:
         type: integer
         enum:
          - 0
          - 1
         example: 1
    PAMv3RequestBody:
      type: object
      properties:
        ttl:
          type: integer
          example: 1440
        permissions:
          $ref: '#/components/schemas/PAMv3RequestPermission'
    PAMv3RequestPermission:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/PAMv3RequestPermResources'
        patterns:
          $ref: '#/components/schemas/PAMv3RequestPermPatterns'
        meta:
          type: object
          properties:
            user-id:
              type: string
              example: jay@example.com
    PAMv3RequestPermPatterns:
      type: object
      properties:
        channels:
          type: object
          additionalProperties:
            type: integer
        groups:
          type: object
          example: {}
        users:
          type: object
          example: {}
        spaces:
          type: object
          example: {}
    PAMv3RequestPermResources:
      type: object
      properties:
        channels:
          type: object
          properties:
            inbox-joy:
              type: integer
              example: 3
        groups:
          type: object
          example: {}
        users:
          type: object
          example: {}
        spaces:
          type: object
          example: {}
    PAMv3Response:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: object
          properties:
            message:
              type: string
              example: Success
            token:
              type: string
              example: p0F2AkF0Gl043rhDdHRsCkNyZXOkRGNoYW6hZnNlY3JldAFDZ3JwoEN1c3KgQ3NwY6BDcGF0pERjaGFuoENncnCgQ3VzcqBDc3BjoERtZXRhoENzaWdYIGOAeTyWGJI
        service:
          type: string
          example: Access Manager
    Error400PAMv3Response:
      type: object
      properties:
        status:
          type: integer
          example: 400
        error:
          type: object
          properties:
            message:
              type: string
              example: Invalid ttl
            source:
              type: string
              example: authz
            details:
              type: array
              items:
                $ref: '#/components/schemas/Error400PAMv3RespDetails'
        service:
          type: string
          example: Access manager
    Error400PAMv3RespDetails:
      type: object
      properties:
        message:
          type: string
          example: Valid range is 1 minute to 30 days.
        location:
          type: string
          example: ttl
        locationType:
          type: string
          example: body
    Error403PAMv3Response:
      type: object
      properties:
        status:
          type: integer
          example: 403
        error:
          type: object
          properties:
            message:
              type: string
              example: Invalid signature
            source:
              type: string
              example: authz
            details:
              type: array
              items:
                $ref: '#/components/schemas/Error403PAMv3RespDetails'
        service:
          type: string
          example: Access manager
    Error403PAMv3RespDetails:
      type: object
      properties:
        message:
          type: string
          example: Client and server produced different signatures for the same inputs.
        location:
          type: string
          example: signature
        locationType:
          type: string
          example: query