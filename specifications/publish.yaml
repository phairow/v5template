openapi: 3.0.1
info:
  title: PubNub Publish APIs
  description: This is the place where you can find all PubNub APIs for Publish
  termsOfService: http://pubnub.com/terms/
  contact:
    email: support@pubnub.com
  version: 0.0.1
servers:
- url: https://ps.pndsn.com
tags:
- name: Publish
  description: Everything about Publishing messages
- name: Fire
  description: The fire endpoint allows the client to send a message to BLOCKS Event Handlers.
- name: Signal
  description: This resource allows a developer to send a signal to a channel.
paths:
  /publish/{pub_key}/{sub_key}/0/{channel}/{callback}/{payload}:
    get:
      tags:
      - Publish
      summary: Publish a message to a channel.
      description: Publish JSON to channel via GET
      parameters:
      - $ref: '#/components/parameters/PubKeyPathParam'
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/CallbackPathParam'
      - $ref: '#/components/parameters/PublishPayloadPathParam'
      - $ref: '#/components/parameters/StoreQueryParam'
      - $ref: '#/components/parameters/AuthQueryParam'
      - $ref: '#/components/parameters/MetadataQueryParam'
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/TimeToLiveQueryParam'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PublishSuccessResponse'
              examples:
                 'Request without JSONP':
                   value: [
                            1,
                            "Sent",
                            "14375220012064619"
                          ]
                 'Request with JSONP':
                   value: myCallback([1,"Sent","14375220012064619"])     
  /publish/{pub_key}/{sub_key}/0/{channel}/{callback}:
    post:
      tags:
      - Publish
      summary: Publish a message to a channel.
      description: Publish JSON to channel via POST
      requestBody:
        description: contains message for publishing to a channel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequestBody'
        required: true
      parameters:
      - $ref: '#/components/parameters/PubKeyPathParam'
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/CallbackPathParam'
      - $ref: '#/components/parameters/StoreQueryParam'
      - $ref: '#/components/parameters/AuthQueryParam'
      - $ref: '#/components/parameters/MetadataQueryParam'
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/TimeToLiveQueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSuccessResponse'
              examples:
                 'Request without JSONP':
                   value: [
                            1,
                            "Sent",
                            "14375220012064619"
                          ]
                 'Request with JSONP':
                   value: myCallback([1,"Sent","14375220012064619"])
    get:
      tags:
      - Fire  
      summary: Fire Endpoint
      description: Use this api to to send a message to BLOCKS Event Handlers.
      parameters:
      - $ref: '#/components/parameters/PubKeyPathParam'
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/CallbackPathParam'
      - $ref: '#/components/parameters/StoreQueryParam'
      - $ref: '#/components/parameters/AuthQueryParam'
      - $ref: '#/components/parameters/MetadataQueryParam'
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/NoReplyQueryParam'
      responses:
        '200':
          description: Success
  /signal/{pub_key}/{sub_key}/0/{channel}/{callback}/{payload}:
    get:
      tags:
      - Signal
      summary: Send a signal to a channel
      description: Signals are very small, transient messages that represent momentary snippets of information
      parameters:
      - $ref: '#/components/parameters/PubKeyPathParam'
      - $ref: '#/components/parameters/SubKeyPathParam'
      - $ref: '#/components/parameters/ChannelPathParam'
      - $ref: '#/components/parameters/CallbackPathParam'
      - $ref: '#/components/parameters/PublishPayloadPathParam'
      - $ref: '#/components/parameters/UuidQueryParam'
      - $ref: '#/components/parameters/AuthQueryParam'
      responses:
        '200':
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PublishSuccessResponse'
              examples:
               'Request without JSONP':
                 value: [
                          1,
                          "Sent",
                          "14375220012064619"
                        ]
               'Request with JSONP':
                 value: myCallback([1,"Sent","14375220012064619"])
        '400':
          description: Bad Request
          content:
            text/javascript:
             schema:
              $ref: '#/components/schemas/ErrorResponse400'
        '403':
          description: Unauthorized access
          content:
            text/javascript:
             schema:
              $ref: '#/components/schemas/ErrorResponse403'
        '413':
          description: The Signal POST body is larger than 30 bytes.
          content:
            text/javascript:
             schema:
              $ref: '#/components/schemas/ErrorResponse413'
        '429':
          description: Request rate limit exceeded.
          content:
            text/javascript:
             schema:
              $ref: '#/components/schemas/ErrorResponse429'
components:
  parameters:
    PubKeyPathParam:
      name: pub_key
      in: path
      description: the publish key to use
      required: true
      schema:
        type: string
      example: myPubKey    
    SubKeyPathParam:
      name: sub_key
      in: path
      description: the subscriber key
      required: true
      schema:
        type: string
      example: mySubKey
    ChannelPathParam:
      name: channel
      in: path
      description: the destination of the message
      required: true
      schema:
        type: string
      example: ch1
    CallbackPathParam:
      name: callback
      in: path
      description: response will be wrapped in JSONP function, 0 for no JSONP
      required: true
      schema:
        type: string
      examples:
        myCallback:
          value: 'myCallback'
          summary: 'response will be wrapped in JSONP function'
        zero:
          value: 0
          summary: 'for no JSONP'
    PublishPayloadPathParam:
      name: payload
      in: path
      description: url-encoded JSON
      schema:
        type: string
      required: true
      example: '%7B%22text%22%3A%22hey%22%7D'
    StoreQueryParam:
      name: store
      in: query
      description: this parameter overrides default account configuration on message saving. 1 to Save, 0 to not save.
      schema:
        type: integer
      required: false
      examples:
        one:
          value: 1
          summary: 1 to Save
        zero:
          value: 0
          summary: 0 to not save
    AuthQueryParam:
      name: auth
      in: query
      description: If the channel is protected by PAM, auth must be passed with a key which is authorized to publish to the channel.
      schema:
        type: string
      required: false
      example: authKey
    MetadataQueryParam:
      name: meta
      in: query
      description: used to send additional information about the message which can be used on stream filtering.
      required: false
      schema:
        type: object
        additionalProperties:
          type: string
      example: {"cool":"meta"}
    UuidQueryParam:
      name: uuid
      in: query
      description: A unique alphanumeric ID for identifying the client to the PubNub Presence System, as well as for PubNub Analytics.
      schema:
        type: string
      required: true
      example: db9c5e39-7c95-40f5-8d71-125765b6f561
    TimeToLiveQueryParam:
      name: ttl
      in: query
      description: >
        Set a per-message time to live in storage.
        If store = 1, and ttl = 0, the message is stored with no expiry time.
        If store = 1, and ttl = X (X is an Integer value), the message is stored with an expiry time of X hours.
        If store = 0, the ttl parameter is ignored.
        If ttl is not specified, then expiration of the message defaults back to the expiry value for the key.
      schema:
        type: integer
      required: false
      example: 1
    NoReplyQueryParam:
      name: norep
      in: query
      description: Should be true for Fire
      schema:
        type: boolean
      required: true
      example: true  

  schemas:
    PublishRequestBody:
      type: object
      properties:
        message:
          type: string
      example: 
        message: "All your base are belong to us."
    SignalResponsePayloadWithChannelArray:
      type: object
      properties:
        channels:
          type: array
          items:
            type: string
          example: [ch1,ch2]
    PublishSuccessResponse:
      type: array
      items:
        oneOf:
         - type: integer                
         - type: string
    ErrorResponse400:
          type: object
          properties:
            message:
              type: string
              example: "Invalid Subscribe Key"
            error:
              type: boolean
              example: true
            status:
              type: integer
              example: 400
    ErrorResponse403:
          type: object
          properties:
            message:
              type: string
              example: "Forbidden"
            payload:
              $ref: '#/components/schemas/SignalResponsePayloadWithChannelArray'
            error:
              type: boolean
              example: true
            service:
              type: string
              example: "Access Manager"
            status:
              type: integer
              example: 403
    ErrorResponse413:
          type: object
          properties:
            status:
              type: integer
              example: 413
            service:
              type: string
              example: "Balancer"
            error:
              type: boolean
              example: true
            message:
              type: string
              example: "Request Entity Too Large"
    ErrorResponse429:
          type: object
          properties:
            status:
              type: integer
              example: 429
            error:
              type: boolean
              example: true
            message:
              type: string
              example: "Too many requests."